#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# @Time    : 20220710
# @Author  : KaiQiangLi
# @Site    : Hangzhou
# @File    : spider_case_001
# @Software: 获取最好大学网站排名

import bs4
import requests
from bs4 import BeautifulSoup

# 函数说明： 输入，需要获取的url信息，输出，url的内容
def getHTMLText(url):
    try:
        # 修改request头为Mozilla/5.0，避免网站判断为爬虫。
        kv_headers = {'user-agent': 'Mozilla/5.0'}
        r = requests.get(url, timeout=30, headers=kv_headers)
        # 如果状态不是200，引发HTTPError异常
        r.raise_for_status()
        r.encoding = r.apparent_encoding
        return r.text
    except:
        return "产生异常"

#函数说明 将一个HTML页面，放到一个list列表中，这个列表定位为ulist，
#所有大学信息被封装在一个表格中，表格标签是tbody，每一个大学信息被封装在一个tr里面，每个tr标签包含了当前大学的信息，每个tr标签又被td包围
def fillUnivList(ulist, html):
    soup = BeautifulSoup(html, "html.parser")
    #先获取tbody标签的所有内容
    for tr in soup.find('tbody').children:
        #在tbody标签解析tr标签，获得每一个大学信息
        if isinstance(tr, bs4.element.Tag): # 检测tr标签类型，如果不是bs4定义的Tag类型，过滤掉。
            #在把tr标签中的td标签找到
            tds = tr('td')
            #tds0=排名，tds4=分数，tas=学校名称
            tas = tr('a')
            # 赋值，去除空格
            ulist.append([tds[0].string.strip(),tas[0].string.strip(),tds[4].string.strip()])
    pass #不做任何操作

#函数说明 将ulist信息打印出来，第二个参数num，将列表中多少个元素打印出来。
def printUnivList(ulist, num):
    # 调整格式 打印学校排名用第3个变量填充
    tplt = "{0:^10}\t{1:{3}^10}\t{2:^10}"
    #print("{:^10}\t{:^6}\t{:^10}".format("排名", "学校名称", "总分"))
    print(tplt.format("排名","学校名称","总分",chr(12288)))

    for i in range(num):
        u=ulist[i]
        print(tplt.format(u[0], u[1], u[2],chr(12288)))

# 函数说明 主函数
def main():
    uinfo = []  # 将大学信息放到这个列表中
    url = 'https://www.shanghairanking.cn/rankings/bcur/201611'
    html = getHTMLText(url)  # 调用函数,将url转换为html
    fillUnivList(uinfo, html)  # 将html信息提取后放在uinfo中
    printUnivList(uinfo, 30) #打印大学信息，列出20所学校信息
main()
